{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000 // 30 seconds timeout for file uploads\n});\n\n// Add request interceptor for debugging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('Making API request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log('API response:', response.status, response.config.url);\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3, _error$response4, _error$response5, _error$response6, _error$response6$data;\n  console.error('Response error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 413) {\n    throw new Error('File too large. Please use a smaller file.');\n  } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 415) {\n    throw new Error('Unsupported file type. Please use PDF or DOCX files.');\n  } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 500) {\n    throw new Error('Server error. Please try again later.');\n  } else if (error.code === 'ECONNABORTED') {\n    throw new Error('Request timeout. Please try again.');\n  } else if (!error.response) {\n    throw new Error('Network error. Please check your connection.');\n  }\n  throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.detail) || 'An unexpected error occurred');\n});\nexport const analyzeResume = async formData => {\n  try {\n    const response = await api.post('/analyze', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Analysis failed:', error);\n    throw error;\n  }\n};\nexport const healthCheck = async () => {\n  try {\n    const response = await api.get('/health');\n    return response.data;\n  } catch (error) {\n    console.error('Health check failed:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","_error$response6","_error$response6$data","data","Error","code","detail","analyzeResume","formData","post","headers","healthCheck","get"],"sources":["/Users/bertharo/ATS Reviewer/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000, // 30 seconds timeout for file uploads\n});\n\n// Add request interceptor for debugging\napi.interceptors.request.use(\n  (config) => {\n    console.log('Making API request:', config.method?.toUpperCase(), config.url);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log('API response:', response.status, response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error('Response error:', error.response?.status, error.response?.data);\n    \n    if (error.response?.status === 413) {\n      throw new Error('File too large. Please use a smaller file.');\n    } else if (error.response?.status === 415) {\n      throw new Error('Unsupported file type. Please use PDF or DOCX files.');\n    } else if (error.response?.status === 500) {\n      throw new Error('Server error. Please try again later.');\n    } else if (error.code === 'ECONNABORTED') {\n      throw new Error('Request timeout. Please try again.');\n    } else if (!error.response) {\n      throw new Error('Network error. Please check your connection.');\n    }\n    \n    throw new Error(error.response?.data?.detail || 'An unexpected error occurred');\n  }\n);\n\nexport const analyzeResume = async (formData) => {\n  try {\n    const response = await api.post('/analyze', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    \n    return response.data;\n  } catch (error) {\n    console.error('Analysis failed:', error);\n    throw error;\n  }\n};\n\nexport const healthCheck = async () => {\n  try {\n    const response = await api.get('/health');\n    return response.data;\n  } catch (error) {\n    console.error('Health check failed:', error);\n    throw error;\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}